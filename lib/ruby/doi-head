#!c:/cygwin/usr/local/bin/ruby

  require 'cgi'
  require 'oboe'; include Oboe

  cgi = CGI.new; args = cgi.params

  o = OpenURL.new(args)
  
  ctx = nil; doi_ = []; uri_ = []
  Entity.entity_types.each do |ent_type|
    ctx = o.get_context
    next unless ctx.entity_type?(ent_type)
    e = ctx.get_entity_of_type(ent_type)
    next unless e
    Descriptor.descriptor_types.each do |dsc_type|
      e.get_descriptors_of_type(dsc_type).each do |d|
        case dsc_type
          when Descriptor::ID
            id = Registry.get_id(d.value) 
            scheme = Registry.get_scheme(id) 
            if scheme == 'doi'
              post = "hdl=#{id.sub(/doi:/, '')}&auth=1&noredirect=1"
              html = Utils.post_html("http://hdl.handle.net/", post)
              if html
                html.each do |line|
                  if line =~ /<td><a href=".*?">(.*?)<\/a><\/td>/
                    uri = $1
                    e.add_descriptor(Descriptor.new(dsc_type, nil, "uri:#{uri}"))
                    doi_ << id.sub(/doi:/, '')
                    uri_ << uri
                  end
                end
              end
            end
        end 
      end
    end
    ctx.add_entity(e) 
  end
  o.add_context(ctx)

  # Send back an OpenURL querystring wih foreign parameters
  # for the DOI and URI lists
  print "content-type: text/plain\n\n"
  print "#{o.to_query}&"
  print "#{doi_.map{ |doi| '_doi=' + doi }.join('&')}&"
  print "#{uri_.map{ |uri| '_uri=' + uri }.join('&')}"
  print "\n"

__END__
